{
  "manifest": {
    "name": "core-js-compat",
    "description": "core-js compat",
    "version": "3.19.2",
    "repository": {
      "type": "git",
      "url": "https://github.com/zloirock/core-js.git",
      "directory": "packages/core-js-compat"
    },
    "main": "index.js",
    "dependencies": {
      "browserslist": "^4.18.1",
      "semver": "7.0.0"
    },
    "funding": {
      "type": "opencollective",
      "url": "https://opencollective.com/core-js"
    },
    "license": "MIT",
    "gitHead": "e49b7f34f7b3a10cc88e1210431508c7a58e069b",
    "_registry": "npm",
    "_loc": "/home/ubuntu/.cache/yarn/v6/npm-core-js-compat-3.19.2-18066a3404a302433cb0aa8be82dd3d75c76e5c4-integrity/node_modules/core-js-compat/package.json",
    "readmeFilename": "README.md",
    "readme": "[`core-js-compat` package](https://github.com/zloirock/core-js/tree/master/packages/core-js-compat) contains data about the necessity of [`core-js`](https://github.com/zloirock/core-js) modules and API for getting a list of required core-js modules by browserslist query.\n\n```js\nconst {\n  list,                  // array of required modules\n  targets,               // object with targets for each module\n} = require('core-js-compat')({\n  targets: '> 2.5%',     // browserslist query or object of minimum environment versions to support\n  filter: /^(es|web)\\./, // optional filter - string-prefix, regexp or list of modules\n  version: '3.19',       // used `core-js` version, by default - the latest\n});\n\nconsole.log(targets);\n/* =>\n{\n  'es.symbol.match-all': { ios: '12.2-12.4' },\n  'es.array.unscopables.flat': { ios: '12.2-12.4' },\n  'es.array.unscopables.flat-map': { ios: '12.2-12.4' },\n  'es.math.hypot': { chrome: '77' },\n  'es.promise.all-settled': { firefox: '69', ios: '12.2-12.4' },\n  'es.promise.finally': { ios: '12.2-12.4' },\n  'es.string.match-all': { chrome: '77', firefox: '69', ios: '12.2-12.4' },\n  'es.string.replace': { firefox: '69', ios: '12.2-12.4' },\n  'es.typed-array.float32-array': { ios: '12.2-12.4' },\n  'es.typed-array.float64-array': { ios: '12.2-12.4' },\n  'es.typed-array.int8-array': { ios: '12.2-12.4' },\n  'es.typed-array.int16-array': { ios: '12.2-12.4' },\n  'es.typed-array.int32-array': { ios: '12.2-12.4' },\n  'es.typed-array.uint8-array': { ios: '12.2-12.4' },\n  'es.typed-array.uint8-clamped-array': { ios: '12.2-12.4' },\n  'es.typed-array.uint16-array': { ios: '12.2-12.4' },\n  'es.typed-array.uint32-array': { ios: '12.2-12.4' },\n  'es.typed-array.from': { ios: '12.2-12.4' },\n  'es.typed-array.of': { ios: '12.2-12.4' },\n  'web.dom-collections.iterator': { ios: '12.2-12.4' },\n  'web.immediate': { chrome: '77', firefox: '69', ios: '12.2-12.4' },\n  'web.url': { ios: '12.2-12.4' },\n  'web.url.to-json': { ios: '12.2-12.4' },\n  'web.url-search-params': { ios: '12.2-12.4' }\n}\n*/\n```\n\n### `targets` option\n`targets` could be [a `browserslist` query](https://github.com/browserslist/browserslist) or a targets object that specifies minimum environment versions to support:\n```js\n// browserslist query:\n'defaults, not IE 11, maintained node versions'\n// object:\n{\n  android: '4.0',      // Android WebView version\n  chrome: '38',        // Chrome version\n  deno: '1.12',        // Deno version\n  edge: '13',          // Edge version\n  electron: '5.0',     // Electron framework version\n  firefox: '15',       // Firefox version\n  ie: '8',             // Internet Explorer version\n  ios: '13.0',         // iOS Safari version\n  node: 'current',     // NodeJS version, you could use 'current' for set it to currently used\n  opera: '12',         // Opera version\n  opera_mobile: '7',   // Opera Mobile version\n  phantom: '1.9',      // PhantomJS headless browser version\n  rhino: '1.7.13',     // Rhino engine version\n  safari: '14.0',      // Safari version\n  samsung: '14.0',     // Samsung Internet version\n  esmodules: true,     // That option set target to minimum supporting ES Modules versions of all browsers\n  browsers: '> 0.25%', // Browserslist query or object with target browsers\n}\n```\n\n### Additional API:\n\n```js\n// equals of of the method from the example above\nrequire('core-js-compat/compat')({ targets, filter, version }); // => { list: Array<ModuleName>, targets: { [ModuleName]: { [EngineName]: EngineVersion } } }\n// or\nrequire('core-js-compat').compat({ targets, filter, version }); // => { list: Array<ModuleName>, targets: { [ModuleName]: { [EngineName]: EngineVersion } } }\n\n// full compat data:\nrequire('core-js-compat/data'); // => { [ModuleName]: { [EngineName]: EngineVersion } }\n// or\nrequire('core-js-compat').data; // => { [ModuleName]: { [EngineName]: EngineVersion } }\n\n// map of modules by `core-js` entry points:\nrequire('core-js-compat/entries'); // => { [EntryPoint]: Array<ModuleName> }\n// or\nrequire('core-js-compat').entries; // => { [EntryPoint]: Array<ModuleName> }\n\n// full list of modules:\nrequire('core-js-compat/modules'); // => Array<ModuleName>\n// or\nrequire('core-js-compat').modules; // => Array<ModuleName>\n\n// the subset of modules which available in the passed `core-js` version:\nrequire('core-js-compat/get-modules-list-for-target-version')('3.19'); // => Array<ModuleName>\n// or\nrequire('core-js-compat').getModulesListForTargetVersion('3.19'); // => Array<ModuleName>\n```\n\nIf you want to add new / update data about modules required for target engines, [follow this instruction](https://github.com/zloirock/core-js/blob/master/CONTRIBUTING.md#updating-core-js-compat-data).\n",
    "licenseText": "Copyright (c) 2014-2021 Denis Pushkarev\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/core-js-compat/-/core-js-compat-3.19.2.tgz#18066a3404a302433cb0aa8be82dd3d75c76e5c4",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/core-js-compat/-/core-js-compat-3.19.2.tgz",
    "hash": "18066a3404a302433cb0aa8be82dd3d75c76e5c4",
    "integrity": "sha512-ObBY1W5vx/LFFMaL1P5Udo4Npib6fu+cMokeziWkA8Tns4FcDemKF5j9JvaI5JhdkW8EQJQGJN1EcrzmEwuAqQ==",
    "registry": "npm",
    "packageName": "core-js-compat",
    "cacheIntegrity": "sha512-ObBY1W5vx/LFFMaL1P5Udo4Npib6fu+cMokeziWkA8Tns4FcDemKF5j9JvaI5JhdkW8EQJQGJN1EcrzmEwuAqQ== sha1-GAZqNASjAkM8sKqL6C3T11x25cQ="
  },
  "registry": "npm",
  "hash": "18066a3404a302433cb0aa8be82dd3d75c76e5c4"
}